package io;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Scanner;

public class ObjectOutputArraryStream {

	public static void main(String[] args) throws IOException, ClassNotFoundException {
		// TODO Auto-generated method stub

		Scanner scanner = null;
		while (true) {
			System.out.println("Please choose whether you want to write to a file or read from?(W or R)");

			scanner = new Scanner(System.in);

			String userInput = scanner.nextLine();
			switch (userInput.toUpperCase().charAt(0)) {
			case 'W':
				writeArray(scanner);
				break;
			case 'R':

				readArray();
			default:
				break;
			}
		}

	}

	public static void writeArray(Scanner scanner) throws IOException {

		System.out.println("How many persons would you like to write?");
		int peopleSize = scanner.nextInt();
		Person people[] = new Person[peopleSize];

		System.out.println("Please write as follow: NAME AGE GENDER");
		for (int i = 0; i < peopleSize; i++) {

			Person newPerson = new Person();

//			newPerson.setName(scanner.nextLine());
//			newPerson.setAge(scanner.nextInt());
//			newPerson.setGender(scanner.nextLine());
			String userString = scanner.nextLine();

			String[] parts = userString.split(" ");
			newPerson.setName(parts[0]);newPerson}
		FileOutputStream fileOutputStream = new FileOutputStream("People_Array.txt");
		ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);
		objectOutputStream.writeObject(people);

		objectOutputStream.close();
		fileOutputStream.close();
	}

	public static void readArray() throws IOException, ClassNotFoundException {

		FileInputStream fileInputStream = new FileInputStream("People_Array.txt");
		ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);
		Person people[] = (Person[]) objectInputStream.readObject();

		for (int i = 0; i < people.length; i++) {

			System.out.println(people[i].toString());
		}

		objectInputStream.close();
		fileInputStream.close();
	}

}
